--------------------------------------------------------
--  Datei erstellt -Dienstag-April-16-2019   
--------------------------------------------------------
DROP SEQUENCE "FLIGHT_DEV"."ADR_ADDRESS_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ADR_ADDRESS_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ADR_CITY_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ADR_CITY_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ADR_COUNTRY_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ADR_COUNTRY_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."APL_ENGINE_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_MAINT_PROGR_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_MAINT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_MODELL_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_MODELL_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_SEQ2";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."APL_PLANE_TYPE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ARP_AIRPORT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ARP_AIRPORT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."BAK_BANKACCOUNT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BAS_BASIC_GRP_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BAS_BASIC_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BAS_BASIC_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."BAS_BASIC_SEQ2";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_GRP_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."BOR_BORD_LOG_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."COM_COMPANY_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."CON_CONTACT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."CON_CONTACT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."CON_CONTACT_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."COST_COST_GRP_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."DEPT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."DOC_DOCUMENT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."DOC_DOCUMENT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."DOC_USAGE_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."DOC_USAGE_TYPE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."EMP_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."FLI_FLIGHT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."FLI_FLIGHT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."FLI_FLIGHT_SEQ2";
DROP SEQUENCE "FLIGHT_DEV"."MDT_MANDANT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."MDT_MANDANT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ORG_ORG_UNIT_REL_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_ORG_UNIT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_ORG_UNIT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ORG_ORG_UNIT_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_SEQ2";
DROP SEQUENCE "FLIGHT_DEV"."ORG_UNIT_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_CONTACT_ADDRESS_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_CONTACT_BANKACCOUNT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_DOC_CONTACT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CON_CON_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE1";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CON_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ1";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ2";
DROP SEQUENCE "FLIGHT_DEV"."REL_ORG_UNIT_ORG_REL_TYPE_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_SE";
DROP SEQUENCE "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."REL_PLANE_FLIGHT_SEQ";
DROP SEQUENCE "FLIGHT_DEV"."RES_RESERVATION_SEQ";
DROP TABLE "FLIGHT_DEV"."ADR_ADDRESS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ADR_CITY" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ADR_COUNTRY" cascade constraints;
DROP TABLE "FLIGHT_DEV"."APL_MAINT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."APL_MAINT_PROGR" cascade constraints;
DROP TABLE "FLIGHT_DEV"."APL_PLANE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."APL_PLANE_MODELL" cascade constraints;
DROP TABLE "FLIGHT_DEV"."APL_PLANE_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ARP_AIRPORT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BAK_BANKACCOUNT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BAS_BASIC" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BAS_BASIC_GRP" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BOR_BORD_LOG" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_GRP" cascade constraints;
DROP TABLE "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_HOB_RPM" cascade constraints;
DROP TABLE "FLIGHT_DEV"."CON_CONTACT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."CON_CONTACT_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."COST_COST_GRP" cascade constraints;
DROP TABLE "FLIGHT_DEV"."DEPT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."DOC_DOCUMENT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."DOC_DOCUMENT_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."DOC_USAGE_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."EMP" cascade constraints;
DROP TABLE "FLIGHT_DEV"."FLI_FLIGHT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."FLI_FLIGHT_COMMENTS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."FLI_FLIGHT_DISCOUNT_REASONS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."FLI_FLIGHT_DISCOUNTS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."GAL_GAIN_AND_LOSS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."HAN_HANGAR" cascade constraints;
DROP TABLE "FLIGHT_DEV"."INV_INVOICE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."INV_INVOICE_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."LAN_LANDING" cascade constraints;
DROP TABLE "FLIGHT_DEV"."MDT_MANDANT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ORG_UNIT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ORG_UNIT_REL_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."ORG_UNIT_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."PAY_PAYMENT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."PAY_PAYMENT_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."PLA_ENGINE_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_AIRPORT_LOCATION" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_CONTACT_ADDRESS" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_CONTACT_BANKACCOUNT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_DOC_CONTACT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_DOC_FLIGHT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_DOC_HANGAR" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_DOC_PLANE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_INV_PL_FLI_CH" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_ORG_UNIT_CON" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_PAY_PLANE_FLI_CH" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_PLANE_FLIGHT" cascade constraints;
DROP TABLE "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER" cascade constraints;
DROP TABLE "FLIGHT_DEV"."RES_RESERVATION" cascade constraints;
DROP VIEW "FLIGHT_DEV"."V_ADR";
DROP VIEW "FLIGHT_DEV"."V_BOR_BORD_LOG";
DROP VIEW "FLIGHT_DEV"."V_CON_DOC_EXISTS";
DROP VIEW "FLIGHT_DEV"."V_DOC_MISS_INVAL";
DROP VIEW "FLIGHT_DEV"."V_FLI_FLIGHT";
--------------------------------------------------------
--  DDL for Sequence ADR_ADDRESS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_ADDRESS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADR_ADDRESS_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_ADDRESS_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADR_CITY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_CITY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADR_CITY_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_CITY_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADR_COUNTRY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_COUNTRY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ADR_COUNTRY_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ADR_COUNTRY_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_ENGINE_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_ENGINE_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_MAINT_PROGR_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_MAINT_PROGR_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_MAINT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_MAINT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_MODELL_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_MODELL_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_MODELL_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_MODELL_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence APL_PLANE_TYPE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."APL_PLANE_TYPE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ARP_AIRPORT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ARP_AIRPORT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ARP_AIRPORT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ARP_AIRPORT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 101 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAK_BANKACCOUNT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAK_BANKACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAK_BANKACCOUNT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAS_BASIC_GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAS_BASIC_GRP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 45 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAS_BASIC_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAS_BASIC_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAS_BASIC_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAS_BASIC_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 4 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BAS_BASIC_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BAS_BASIC_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_ENTRY_ADD_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_ENTRY_ADD_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_ENTRY_GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_GRP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_ENTRY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOR_BORD_LOG_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."BOR_BORD_LOG_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COM_COMPANY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."COM_COMPANY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CON_CONTACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."CON_CONTACT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CON_CONTACT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."CON_CONTACT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence CON_CONTACT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."CON_CONTACT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence COST_COST_GRP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."COST_COST_GRP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 9 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DEPT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DEPT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 50 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_DOCUMENT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_DOCUMENT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_DOCUMENT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_DOCUMENT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_DOCUMENT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_DOCUMENT_TYPE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_USAGE_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_USAGE_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence DOC_USAGE_TYPE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."DOC_USAGE_TYPE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EMP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."EMP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 8000 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FLI_FLIGHT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."FLI_FLIGHT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FLI_FLIGHT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."FLI_FLIGHT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence FLI_FLIGHT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."FLI_FLIGHT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 41 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MDT_MANDANT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."MDT_MANDANT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence MDT_MANDANT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."MDT_MANDANT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_ORG_UNIT_REL_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_ORG_UNIT_REL_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_ORG_UNIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_ORG_UNIT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_ORG_UNIT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_ORG_UNIT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_ORG_UNIT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_ORG_UNIT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_CHECK_OUT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_REL_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_REL_TYPE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ORG_UNIT_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."ORG_UNIT_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_BORD_LOG_ENTRY_PAY_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_CONTACT_ADDRESS_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_CONTACT_ADDRESS_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_CONTACT_BANKACCOUNT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_CONTACT_BANKACCOUNT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_DOC_CONTACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_DOC_CONTACT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 61 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_DOC_TYPE_USAGE_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 65 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CON_CON_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CON_CON_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 21 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CON_ORG_REL_TYPE1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CON_ORG_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CON_ORG_TYPE_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CON_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CON_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CONTACT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CONTACT_SEQ1
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ1"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_CONTACT_SEQ2
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_SEQ2"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_ORG_UNIT_ORG_REL_TYPE_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_ORG_UNIT_ORG_REL_TYPE_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_PLANE_FLIGHT_CHARTERER_SE
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_SE"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_PLANE_FLIGHT_CHARTERER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REL_PLANE_FLIGHT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."REL_PLANE_FLIGHT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence RES_RESERVATION_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "FLIGHT_DEV"."RES_RESERVATION_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table ADR_ADDRESS
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."ADR_ADDRESS" 
   (	"PK_ADR_ADDRESS" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"STREET" VARCHAR2(4000 BYTE), 
	"STREET_NO" VARCHAR2(20 BYTE), 
	"ZIP_CODE" VARCHAR2(20 BYTE), 
	"FK_ADR_CITY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ADR_CITY
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."ADR_CITY" 
   (	"PK_ADR_CITY" NUMBER, 
	"CITY" VARCHAR2(4000 BYTE), 
	"FK_ADR_COUNTRY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ADR_COUNTRY
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."ADR_COUNTRY" 
   (	"PK_ADR_COUNTRY" NUMBER, 
	"COUNTRY" VARCHAR2(4000 BYTE), 
	"PHONE_CODE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APL_MAINT
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."APL_MAINT" 
   (	"PK_APL_MAINT" NUMBER, 
	"INSP" VARCHAR2(4000 BYTE), 
	"DATE_CALC" DATE, 
	"DATE_PLANNED" DATE, 
	"DATE_DONE" DATE, 
	"FK_APL_PLANE" NUMBER, 
	"CREATED_AT" DATE, 
	"CREATED_BY" VARCHAR2(20 BYTE), 
	"MODIFIED_AT" DATE, 
	"PRICE_NET_PLANNED" NUMBER, 
	"PRICE_NET_FINAL" NUMBER, 
	"PRICE_BR_PLANNED" NUMBER, 
	"PRICE_TAX_PLANNED" NUMBER, 
	"PRICE_TAX_FINAL" NUMBER, 
	"PRICE_CURR" NUMBER, 
	"PRICED_BR_FINAL" NUMBER, 
	"MODIFIED_BY" VARCHAR2(20 BYTE), 
	"FK_APL_MAINT_PROGR" NUMBER, 
	"FK_MDT_MANDANT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APL_MAINT_PROGR
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."APL_MAINT_PROGR" 
   (	"PK_APL_MAINT_PROGR" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"MAINT_PROGR" VARCHAR2(400 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APL_PLANE
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."APL_PLANE" 
   (	"PK_APL_PLANE" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"PLANE_NO" VARCHAR2(20 BYTE), 
	"IMAGE" BLOB, 
	"DESCRIPTION" VARCHAR2(4000 CHAR), 
	"FK_APL_ENGINE_TYPE" NUMBER, 
	"CABIN_OV_13000_FT" VARCHAR2(4000 CHAR), 
	"BORD_00" VARCHAR2(4000 CHAR), 
	"BOARDING_OPPORTUNITY" NUMBER, 
	"CRUISING_SPEED_HG_20000_FT" NUMBER, 
	"CRUISING_SPEED_UNIT" VARCHAR2(4000 CHAR), 
	"WEIGHT_KERB_KG" NUMBER, 
	"WEIGHT_TAKEOFF_MAX_KG" NUMBER, 
	"PERMITTED_LOAD_KG" NUMBER, 
	"CNT_PASSENGERS_MAX" NUMBER, 
	"FUEL_TANK_SIZE_L" NUMBER, 
	"CONSUMPTION_L" NUMBER, 
	"RANGE_AVERAGE_FT" NUMBER, 
	"DIST_TAKE_OFF_FT" NUMBER, 
	"DIST_LANDING_FT" NUMBER, 
	"FK_APL_MAINT_PROGR" NUMBER, 
	"FK_APL_PLANE_MODELL" NUMBER, 
	"IMG_SRC" VARCHAR2(400 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 LOB ("IMAGE") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table APL_PLANE_MODELL
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."APL_PLANE_MODELL" 
   (	"PK_APL_PLANE_MODELL" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"MODELL_NO" VARCHAR2(20 BYTE), 
	"FK_APL_PLANE_TYPE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table APL_PLANE_TYPE
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."APL_PLANE_TYPE" 
   (	"PK_APL_PLANE_TYPE" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"PLANE_TYPE" VARCHAR2(4000 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ARP_AIRPORT
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."ARP_AIRPORT" 
   (	"PK_ARP_AIRPORT" NUMBER, 
	"AIRPORT" VARCHAR2(20 BYTE), 
	"DESCRIPTION" VARCHAR2(20 BYTE), 
	"FK_ADR_COUNTRY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BAK_BANKACCOUNT
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."BAK_BANKACCOUNT" 
   (	"PK_BAK_BANKACCOUNT" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"BANK" VARCHAR2(20 BYTE), 
	"IBAN" VARCHAR2(20 BYTE), 
	"FK_BAK_BANKACCOUNT_TYPE" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BAK_BANKACCOUNT_TYPE
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE" 
   (	"PK_BANKACCOUNT_TYPE" NUMBER, 
	"BANK_ACCOUNT_TYPE" VARCHAR2(4000 BYTE), 
	"FK_MDT_MANDANT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BAS_BASIC
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."BAS_BASIC" 
   (	"PK_BAS_BASIC" NUMBER, 
	"FK_MDT_MANDANT" NUMBER, 
	"FK_BAS_BASIC_GRP" NUMBER, 
	"BASIC_NAME_DE" VARCHAR2(4000 CHAR), 
	"BASIC_VALUE" NUMBER, 
	"BASIC_NAME_EN" VARCHAR2(4000 CHAR), 
	"XML" "SYS"."XMLTYPE" , 
	"JS" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" 
 XMLTYPE COLUMN "XML" STORE AS SECUREFILE BINARY XML (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192
  NOCACHE LOGGING  NOCOMPRESS  KEEP_DUPLICATES 
  STORAGE(INITIAL 106496 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ALLOW NONSCHEMA DISALLOW ANYSCHEMA 
 LOB ("JS") STORE AS BASICFILE (
  TABLESPACE "USERS" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table BAS_BASIC_GRP
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."BAS_BASIC_GRP" 
   (	"PK_BAS_BASIC_GRP" NUMBER, 
	"BASIS_GRP_NAME" VARCHAR2(400 BYTE), 
	"FK_MDT_MANDANT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table BOR_BORD_LOG
--------------------------------------------------------

  CREATE TABLE "FLIGHT_DEV"."BOR_BORD_LOG" 
   (	"PK_BOR_BORD_LOG" NUMBER, 
	"BORD_LOG" VARCHAR2(400 BYTE), 
	"BORD_LOG_DATE" DATE, 
	"FK_MDT_MANDANT" NUMBER, 
	"FK_APL_PLANE" NUMBER, 
	"CNT_LANDINGS_BEGIN" NUMBER, 
	"CNT_FLIGHT_HOURS_BEGIN" NUMBER, 
	"CNT_LANDINGS_END" NUMBER, 
	"CNT_FLIGHT_HOURS_END" NUMBER, 
	"BEGIN_DATE" DATE, 
	"END_DATE" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BAK_BANKACCOUNT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."BAK_BANKACCOUNT_PK" ON "FLIGHT_DEV"."BAK_BANKACCOUNT" ("PK_BAK_BANKACCOUNT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index FLI_FLIGHT_DISCOUNTS_CON
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."FLI_FLIGHT_DISCOUNTS_CON" ON "FLIGHT_DEV"."FLI_FLIGHT_DISCOUNTS" ("PK_FLI_FLIGHT_DISCOUNTS") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REL_PLANE_FLIGHT_CHARTERER_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_PK" ON "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER" ("PK_REL_PLANE_FLIGHT_CHARTERER") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index ORG_UNIT_CHECK_OUT_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT_PK" ON "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT" ("PK_ORG_UNIT_CHECK_OUT") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REL_DOC_HANGAR_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."REL_DOC_HANGAR_PK" ON "FLIGHT_DEV"."REL_DOC_HANGAR" ("PK_REL_DOC_HANGAR") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REL_ORG_UNIT_CON_CON_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."REL_ORG_UNIT_CON_CON_TYPE_PK" ON "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE" ("PK_ORG_UNIT_CON_ORG_REL_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REL_DOC_TYPE_USAGE_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_PK" ON "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE" ("PK_REL_DOC_TYPE_USAGE_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index APL_ENGINE_TYPE_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."APL_ENGINE_TYPE_PK" ON "FLIGHT_DEV"."PLA_ENGINE_TYPE" ("PK_PLA_ENGINE_TYPE") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index REL_BORD_LOG_ENTRY_PAY_CON
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY_CON" ON "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY" ("PK_BORD_LOG_ENTRY_PAY") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Index BAS_BASIC_PK
--------------------------------------------------------

  CREATE UNIQUE INDEX "FLIGHT_DEV"."BAS_BASIC_PK" ON "FLIGHT_DEV"."BAS_BASIC" ("PK_BAS_BASIC") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Trigger ADR_ADDRESS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ADR_ADDRESS_TRG" 
BEFORE INSERT ON ADR_ADDRESS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ADR_ADDRESS IS NULL THEN
      SELECT ADR_ADDRESS_SEQ1.NEXTVAL INTO :NEW.PK_ADR_ADDRESS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."ADR_ADDRESS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ADR_CITY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ADR_CITY_TRG" 
BEFORE INSERT ON ADR_CITY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ADR_CITY IS NULL THEN
      SELECT ADR_CITY_SEQ1.NEXTVAL INTO :NEW.PK_ADR_CITY FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."ADR_CITY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ADR_COUNTRY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ADR_COUNTRY_TRG" 
BEFORE INSERT ON ADR_COUNTRY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ADR_COUNTRY IS NULL THEN
      SELECT ADR_COUNTRY_SEQ1.NEXTVAL INTO :NEW.PK_ADR_COUNTRY FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."ADR_COUNTRY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_ENGINE_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_ENGINE_TYPE_TRG" 
BEFORE INSERT ON PLA_ENGINE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_APL_ENGINE_TYPE IS NULL THEN
      SELECT APL_ENGINE_TYPE_SEQ.NEXTVAL INTO :NEW.PK_APL_ENGINE_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."APL_ENGINE_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_MAINT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_MAINT_TRG" 
BEFORE INSERT ON APL_MAINT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_APL_MAINT IS NULL THEN
      SELECT APL_MAINT_SEQ.NEXTVAL INTO :NEW.PK_APL_MAINT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."APL_MAINT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_PLANE_MODELL_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_PLANE_MODELL_TRG" 
BEFORE INSERT ON APL_PLANE_MODELL 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."APL_PLANE_MODELL_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_PLANE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_PLANE_TRG" 
BEFORE INSERT ON APL_PLANE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."APL_PLANE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_PLANE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_PLANE_TRG1" 
BEFORE INSERT ON APL_PLANE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."APL_PLANE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger APL_PLANE_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."APL_PLANE_TYPE_TRG" 
BEFORE INSERT ON APL_PLANE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_APL_PLANE_TYPE IS NULL THEN
      SELECT APL_PLANE_TYPE_SEQ1.NEXTVAL INTO :NEW.PK_APL_PLANE_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."APL_PLANE_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ARP_AIRPORT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ARP_AIRPORT_TRG" 
BEFORE INSERT ON ARP_AIRPORT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."ARP_AIRPORT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BAK_BANKACCOUNT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE_TRG" 
BEFORE INSERT ON BAK_BANKACCOUNT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BANKACCOUNT_TYPE IS NULL THEN
      SELECT BAK_BANKACCOUNT_TYPE_SEQ.NEXTVAL INTO :NEW.PK_BANKACCOUNT_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."BAK_BANKACCOUNT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BAS_BASIC_GRP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BAS_BASIC_GRP_TRG" 
BEFORE INSERT ON BAS_BASIC_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BAS_BASIC_GRP IS NULL THEN
      SELECT BAS_BASIC_GRP_SEQ.NEXTVAL INTO :NEW.PK_BAS_BASIC_GRP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."BAS_BASIC_GRP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BAS_BASIC_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG" 
BEFORE INSERT ON BAS_BASIC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BAS_BASIC_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG1" 
BEFORE INSERT ON BAS_BASIC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BAS_BASIC_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG2" 
BEFORE INSERT ON BAS_BASIC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."BAS_BASIC_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BOR_BORD_LOG_ENTRY_ADD_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_TRG1" 
BEFORE INSERT ON BOR_BORD_LOG_ENTRY_ADD 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BOR_BORD_LOG_ENTRY_ADD IS NULL THEN
      SELECT BOR_BORD_LOG_ENTRY_ADD_SEQ1.NEXTVAL INTO :NEW.PK_BOR_BORD_LOG_ENTRY_ADD FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_ADD_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BOR_BORD_LOG_ENTRY_GRP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_GRP_TRG" 
BEFORE INSERT ON BOR_BORD_LOG_ENTRY_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_ENTRY_GRP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BOR_BORD_LOG_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_TRG" 
BEFORE INSERT ON BOR_BORD_LOG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."BOR_BORD_LOG_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CON_CONTACT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."CON_CONTACT_TRG" 
BEFORE INSERT ON CON_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."CON_CONTACT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CON_CONTACT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."CON_CONTACT_TRG1" 
BEFORE INSERT ON CON_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_CON_CONTACT IS NULL THEN
      SELECT CON_CONTACT_SEQ.NEXTVAL INTO :NEW.PK_CON_CONTACT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."CON_CONTACT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger CON_CONTACT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."CON_CONTACT_TYPE_TRG" 
BEFORE INSERT ON CON_CONTACT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_CON_CONTACT_TYPE IS NULL THEN
      SELECT CON_CONTACT_TYPE_SEQ.NEXTVAL INTO :NEW.PK_CON_CONTACT_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."CON_CONTACT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger COST_COST_GRP_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."COST_COST_GRP_TRG" 
BEFORE INSERT ON COST_COST_GRP 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_COST_COST_GRP IS NULL THEN
      SELECT COST_COST_GRP_SEQ.NEXTVAL INTO :NEW.PK_COST_COST_GRP FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."COST_COST_GRP_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DEPT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."DEPT_TRG1" 
              before insert on dept
              for each row
              begin
                  if :new.deptno is null then
                      select dept_seq.nextval into :new.deptno from sys.dual;
                 end if;
              end;
/
ALTER TRIGGER "FLIGHT_DEV"."DEPT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOC_DOCUMENT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TRG" 
BEFORE INSERT ON DOC_DOCUMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOC_DOCUMENT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TRG1" 
BEFORE INSERT ON DOC_DOCUMENT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_DOC_DOCUMENT IS NULL THEN
      SELECT DOC_DOCUMENT_SEQ1.NEXTVAL INTO :NEW.PK_DOC_DOCUMENT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOC_DOCUMENT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_TRG" 
BEFORE INSERT ON DOC_DOCUMENT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_DOC_DOCUMENT_TYPE IS NULL THEN
      SELECT DOC_DOCUMENT_TYPE_SEQ1.NEXTVAL INTO :NEW.PK_DOC_DOCUMENT_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."DOC_DOCUMENT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger DOC_USAGE_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."DOC_USAGE_TYPE_TRG" 
BEFORE INSERT ON DOC_USAGE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_DOC_USAGE_TYPE IS NULL THEN
      SELECT DOC_USAGE_TYPE_SEQ1.NEXTVAL INTO :NEW.PK_DOC_USAGE_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."DOC_USAGE_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EMP_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."EMP_TRG1" 
              before insert on emp
              for each row
              begin
                  if :new.empno is null then
                      select emp_seq.nextval into :new.empno from sys.dual;
                 end if;
              end;
/
ALTER TRIGGER "FLIGHT_DEV"."EMP_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger FLI_FLIGHT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."FLI_FLIGHT_TRG" 
BEFORE INSERT ON FLI_FLIGHT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_FLI_FLIGHT IS NULL THEN
      SELECT FLI_FLIGHT_SEQ2.NEXTVAL INTO :NEW.PK_FLI_FLIGHT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."FLI_FLIGHT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MDT_MANDANT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."MDT_MANDANT_TRG" 
BEFORE INSERT ON MDT_MANDANT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."MDT_MANDANT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_CHECK_OUT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT_TRG" 
BEFORE INSERT ON ORG_UNIT_CHECK_OUT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORG_UNIT_CHECK_OUT IS NULL THEN
      SELECT ORG_UNIT_CHECK_OUT_SEQ.NEXTVAL INTO :NEW.PK_ORG_UNIT_CHECK_OUT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_CHECK_OUT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_REL_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_TRG" 
BEFORE INSERT ON ORG_UNIT_REL_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_REL_TYPE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_TRG1" 
BEFORE INSERT ON ORG_UNIT_REL_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORG_UNIT_REL_TYPE IS NULL THEN
      SELECT ORG_UNIT_REL_TYPE_SEQ1.NEXTVAL INTO :NEW.PK_ORG_UNIT_REL_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_REL_TYPE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG" 
BEFORE INSERT ON ORG_UNIT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG1" 
BEFORE INSERT ON ORG_UNIT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_TRG2
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG2" 
BEFORE INSERT ON ORG_UNIT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORG_UNIT IS NULL THEN
      SELECT ORG_UNIT_SEQ2.NEXTVAL INTO :NEW.PK_ORG_UNIT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_TRG2" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ORG_UNIT_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."ORG_UNIT_TYPE_TRG" 
BEFORE INSERT ON ORG_UNIT_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."ORG_UNIT_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_BORD_LOG_ENTRY_PAY_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY_TRG" 
BEFORE INSERT ON REL_BORD_LOG_ENTRY_PAY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_BORD_LOG_ENTRY_PAY IS NULL THEN
      SELECT REL_BORD_LOG_ENTRY_PAY_SEQ.NEXTVAL INTO :NEW.PK_BORD_LOG_ENTRY_PAY FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_BORD_LOG_ENTRY_PAY_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_CONTACT_ADDRESS_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_CONTACT_ADDRESS_TRG" 
BEFORE INSERT ON REL_CONTACT_ADDRESS 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_CONTACT_ADDRESS IS NULL THEN
      SELECT REL_CONTACT_ADDRESS_SEQ.NEXTVAL INTO :NEW.PK_REL_CONTACT_ADDRESS FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_CONTACT_ADDRESS_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_CONTACT_BANKACCOUNT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_CONTACT_BANKACCOUNT_TRG" 
BEFORE INSERT ON REL_CONTACT_BANKACCOUNT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_CONTACT_BANKACCOUNT IS NULL THEN
      SELECT REL_CONTACT_BANKACCOUNT_SEQ.NEXTVAL INTO :NEW.PK_CONTACT_BANKACCOUNT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_CONTACT_BANKACCOUNT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_DOC_CONTACT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_DOC_CONTACT_TRG" 
BEFORE INSERT ON REL_DOC_CONTACT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_DOC_CONTACT IS NULL THEN
      SELECT REL_DOC_CONTACT_SEQ.NEXTVAL INTO :NEW.PK_REL_DOC_CONTACT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_DOC_CONTACT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_DOC_TYPE_USAGE_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_TRG" 
BEFORE INSERT ON REL_DOC_TYPE_USAGE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_DOC_TYPE_USAGE_TYPE_TRG1
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_TRG1" 
BEFORE INSERT ON REL_DOC_TYPE_USAGE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_DOC_TYPE_USAGE_TYPE IS NULL THEN
      SELECT REL_DOC_TYPE_USAGE_TYPE_SEQ.NEXTVAL INTO :NEW.PK_REL_DOC_TYPE_USAGE_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_DOC_TYPE_USAGE_TYPE_TRG1" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_ORG_UNIT_CON_ORG_REL_TYPE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE" 
BEFORE INSERT ON REL_ORG_UNIT_CON_ORG_REL_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORG_UNIT_CON_ORG_REL_TYPE IS NULL THEN
      SELECT REL_ORG_UNIT_CON_ORG_REL_TYPE1.NEXTVAL INTO :NEW.PK_ORG_UNIT_CON_ORG_REL_TYPE FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_REL_TYPE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_ORG_UNIT_CON_ORG_TYPE_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_TRG" 
BEFORE INSERT ON REL_ORG_UNIT_CON_ORG_REL_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_ORG_TYPE_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_ORG_UNIT_CONTACT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_TRG" 
BEFORE INSERT ON REL_ORG_UNIT_CON 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    NULL;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CONTACT_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_ORG_UNIT_CON_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_TRG" 
BEFORE INSERT ON REL_ORG_UNIT_CON 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_ORG_UNIT_CON IS NULL THEN
      SELECT REL_ORG_UNIT_CON_SEQ.NEXTVAL INTO :NEW.PK_ORG_UNIT_CON FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "FLIGHT_DEV"."REL_ORG_UNIT_CON_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_PLANE_FLIGHT_CHARTERER_TR
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_TR" 
BEFORE INSERT ON REL_PLANE_FLIGHT_CHARTERER 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_REL_PLANE_FLIGHT_CHARTERER IS NULL THEN
      SELECT REL_PLANE_FLIGHT_CHARTERER_SE.NEXTVAL INTO :NEW.PK_REL_PLANE_FLIGHT_CHARTERER FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_PLANE_FLIGHT_CHARTERER_TR" ENABLE;
--------------------------------------------------------
--  DDL for Trigger REL_PLANE_FLIGHT_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "FLIGHT_DEV"."REL_PLANE_FLIGHT_TRG" 
BEFORE INSERT ON REL_PLANE_FLIGHT 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.PK_PLANE_FLIGHT IS NULL THEN
      SELECT REL_PLANE_FLIGHT_SEQ.NEXTVAL INTO :NEW.PK_PLANE_FLIGHT FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "FLIGHT_DEV"."REL_PLANE_FLIGHT_TRG" ENABLE;
